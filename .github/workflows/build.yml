# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    container:
      image: docker://pandoc/core:2.9
      options: --entrypoint=sh
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check prior contents
        run: ls -al
      - name: convert md to html
        run: |
          find ./ -iname '*.md' -type f -exec sh -c 'echo ${0}; pandoc --standalone --css=styling.css -V lang=en --mathjax -t markdown-smart --to=html5 ${0} -o ${0%.md}.html' {} \;
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Archive artifact
        shell: sh
        run: |
          echo ::group::Archive artifact
          tar \
            --directory ./ \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            .
          echo ::endgroup::
      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ${{ runner.temp }}/artifact.tar
          retention-days: 1
          if-no-files-found: error
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
